[{"path":"https://nanx.me/RECA/CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (https://contributor-covenant.org), version 1.0.0, available https://contributor-covenant.org/version/1/0/0/.","code":""},{"path":"https://nanx.me/RECA/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to RECA","title":"Contributing to RECA","text":"üëçüéâ First , thanks taking time contribute! üéâüëç contribute project : Filing bug report feature request issue. Suggesting change via pull request.","code":""},{"path":"https://nanx.me/RECA/CONTRIBUTING.html","id":"issues","dir":"","previous_headings":"","what":"Issues","title":"Contributing to RECA","text":"file issue possible bug, please try include: Relevant package versions Necessary code data reproduce issue","code":""},{"path":"https://nanx.me/RECA/CONTRIBUTING.html","id":"pull-requests","dir":"","previous_headings":"","what":"Pull Requests","title":"Contributing to RECA","text":"suggest change via pull requests, please: Fork repository GitHub account. Clone forked repository local machine, make changes. Commit push changes GitHub. Create pull request.","code":""},{"path":"https://nanx.me/RECA/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nan Xiao. Author, maintainer.","code":""},{"path":"https://nanx.me/RECA/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Xiao N (2024). RECA: Relevant Component Analysis Supervised Distance Metric Learning. R package version 1.7, https://github.com/nanxstats/RECA, https://nanx./RECA/.","code":"@Manual{,   title = {RECA: Relevant Component Analysis for Supervised Distance Metric Learning},   author = {Nan Xiao},   year = {2024},   note = {R package version 1.7, https://github.com/nanxstats/RECA},   url = {https://nanx.me/RECA/}, }"},{"path":"https://nanx.me/RECA/index.html","id":"reca-","dir":"","previous_headings":"","what":"Relevant Component Analysis for Supervised Distance Metric Learning","title":"Relevant Component Analysis for Supervised Distance Metric Learning","text":"Relevant Component Analysis (RCA) supervised distance metric learning.","code":""},{"path":"https://nanx.me/RECA/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Relevant Component Analysis for Supervised Distance Metric Learning","text":"Install RECA CRAN: try development version GitHub:","code":"install.packages(\"RECA\") # install.packages(\"devtools\") devtools::install_github(\"nanxstats/RECA\")"},{"path":"https://nanx.me/RECA/index.html","id":"contribute","dir":"","previous_headings":"","what":"Contribute","title":"Relevant Component Analysis for Supervised Distance Metric Learning","text":"contribute project, please take look Contributing Guidelines first. Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"https://nanx.me/RECA/reference/RECA-package.html","id":null,"dir":"Reference","previous_headings":"","what":"RECA: Relevant Component Analysis for Supervised Distance Metric Learning ‚Äî RECA-package","title":"RECA: Relevant Component Analysis for Supervised Distance Metric Learning ‚Äî RECA-package","text":"Relevant Component Analysis (RCA) tries find linear transformation feature space effect irrelevant variability reduced transformed space.","code":""},{"path":[]},{"path":"https://nanx.me/RECA/reference/RECA-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"RECA: Relevant Component Analysis for Supervised Distance Metric Learning ‚Äî RECA-package","text":"Maintainer: Nan Xiao @nanx.(ORCID)","code":""},{"path":"https://nanx.me/RECA/reference/rca.html","id":null,"dir":"Reference","previous_headings":"","what":"Relevant Component Analysis ‚Äî rca","title":"Relevant Component Analysis ‚Äî rca","text":"Performs relevant component analysis (RCA) given data. takes data set set positive constraints arguments returns linear transformation data space better representation, alternatively, Mahalanobis metric data space. new representation known optimal information theoretic sense constraint keeping equivalent data points close .","code":""},{"path":"https://nanx.me/RECA/reference/rca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Relevant Component Analysis ‚Äî rca","text":"","code":"rca(x, chunks, useD = NULL)"},{"path":"https://nanx.me/RECA/reference/rca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Relevant Component Analysis ‚Äî rca","text":"x n * d matrix data frame original data. chunks vector size N describing chunklets: -1 -th place says point belong chunklet; integer j place says point belongs chunklet j; chunklets indexes 1:number--chunklets. useD Optional. Default NULL: RCA done original dimension B full rank. useD given, RCA preceded constraints based LDA reduces dimension useD. B case rank useD.","code":""},{"path":"https://nanx.me/RECA/reference/rca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Relevant Component Analysis ‚Äî rca","text":"list RCA results: B: RCA suggested Mahalanobis matrix. Distances data points x1, x2 computed (x2 - x1)^T * B * (x2 - x1). RCA: RCA suggested transformation data. data transformed RCA * data. newX: data RCA transformation. newX = data * RCA.","code":""},{"path":"https://nanx.me/RECA/reference/rca.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Relevant Component Analysis ‚Äî rca","text":"three returned objects just different forms output. one interested Mahalanobis metric original data space, first argument /needs. transformation another space (one can use Euclidean metric) preferred, second returned argument sufficient. Using B equivalent following sense: y1 = * x1, y2 = * y2, (x2 - x1)^T * B * (x2 - x1) = (y2 - y1)^T * (y2 - y1)","code":""},{"path":"https://nanx.me/RECA/reference/rca.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Relevant Component Analysis ‚Äî rca","text":"Note different sets instances (chunklets), example, {1, 3, 7} {4, 6}, might belong class might belong different classes.","code":""},{"path":"https://nanx.me/RECA/reference/rca.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Relevant Component Analysis ‚Äî rca","text":"Aharon Bar-Hillel, Tomer Hertz, Noam Shental, Daphna Weinshall (2003). Learning Distance Functions using Equivalence Relations. Proceedings 20th International Conference Machine Learning (ICML2003).","code":""},{"path":"https://nanx.me/RECA/reference/rca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Relevant Component Analysis ‚Äî rca","text":"","code":"library(\"MASS\")  # Generate synthetic multivariate normal data set.seed(42) k <- 100L # Sample size of each class n <- 3L # Specify how many classes N <- k * n # Total sample size x1 <- mvrnorm(k, mu = c(-16, 8), matrix(c(15, 1, 2, 10), ncol = 2)) x2 <- mvrnorm(k, mu = c(0, 0), matrix(c(15, 1, 2, 10), ncol = 2)) x3 <- mvrnorm(k, mu = c(16, -8), matrix(c(15, 1, 2, 10), ncol = 2)) x <- as.data.frame(rbind(x1, x2, x3)) # Predictors y <- gl(n, k) # Response  # Fully labeled data set with 3 classes, # need to use a line in 2D to classify. plot(x[, 1L], x[, 2L],   bg = c(\"#E41A1C\", \"#377EB8\", \"#4DAF4A\")[y],   pch = rep(c(22, 21, 25), each = k) ) abline(a = -10, b = 1, lty = 2) abline(a = 12, b = 1, lty = 2)   # Generate synthetic chunklets chunks <- vector(\"list\", 300) for (i in 1:100) chunks[[i]] <- sample(1L:100L, 10L) for (i in 101:200) chunks[[i]] <- sample(101L:200L, 10L) for (i in 201:300) chunks[[i]] <- sample(201L:300L, 10L)  chks <- x[unlist(chunks), ]  # Make \"chunklet\" vector to feed the chunks argument chunksvec <- rep(-1L, nrow(x)) for (i in 1L:length(chunks)) {   for (j in 1L:length(chunks[[i]])) {     chunksvec[chunks[[i]][j]] <- i   } }  # Relevant component analysis rcs <- rca(x, chunksvec)  # Learned transformation of the data rcs$RCA #>           [,1]       [,2] #> [1,] -3.147411 -0.7864477 #> [2,] -1.026338  2.4117535  # Learned Mahalanobis distance metric rcs$B #>          [,1]     [,2] #> [1,] 10.52470 1.333590 #> [2,]  1.33359 6.869925  # Whitening transformation applied to the chunklets chkTransformed <- as.matrix(chks) %*% rcs$RCA  # Original data after applying RCA transformation, # easier to classify - using only horizontal lines. xnew <- rcs$newX plot(xnew[, 1L], xnew[, 2L],   bg = c(\"#E41A1C\", \"#377EB8\", \"#4DAF4A\")[gl(n, k)],   pch = c(rep(22, k), rep(21, k), rep(25, k)) ) abline(a = -15, b = 0, lty = 2) abline(a = 16, b = 0, lty = 2)"}]
